Como executar o projeto
Configura√ß√£o do .env

Antes de manipularmos o docker em nossa aplica√ß√£o üö® DEVER√Å SER AJUSTADO O .ENV

Abaixo, est√° o c√≥digo que dever√° ser substituido nas variaveis de ambiente de DATABASE de nossa aplica√ß√£o:

    DB_CONNECTION=pgsql
    DB_HOST=localhost
    DB_PORT=5432
    DB_DATABASE=laravelmarketplace
    DB_USERNAME=twodevelopers
    DB_PASSWORD=c_z7@Oc*@65s
Caso o passo acima seja ignorado, ir√° disparar erro na hora de rodarmos as migrates e para solucionar, dever√° ser derrubado o container, configurado o .env e ai sim manipularmos o docker novamente.

Criar imagem da nossa aplica√ß√£o

Devemos primeiramente criar uma imagem do docker de nossa aplica√ß√£o, para isto, dentro do terminal execute o comando:

docker-compose build
Criar container da nossa aplica√ß√£o

Ap√≥s termos a imagem gerada, devemos executar nossa imagem e container:

docker-compose up -d
√â esperado que essas a√ß√µes criem nossa imagem e inicializem o container para desenvolvimento da aplica√ß√£o, mas √© interessante se certificarmos que o container est√° funcionando sem demais problemas.

Podemos usar o comando:

docker-compose logs
Para verificarmos o estado de nossos containers √© esperado que seja listado os mesmos ap√≥s a execu√ß√£o deste comando

O comando docker-compose logs pode ser usada de forma especifica em um comando, por exemplo: docker-compose logs laravel ser√° verificado apenas o container laravel.

Se algum erro ocorrer

Vamos primeiramente derrubar nosso container utilizando o comando docker-compose down e posteriormente a isto verificar todo o problema e solucionarmos. Ap√≥s isto, deveremos buildar novamente o container com docker-compose build e subir a aplica√ß√£o com docker-compose up-d para testa-la novamente.

Rodar as migrates

Para rodarmos a nossa migrate ser√° necess√°rio antes rodar o comando docker-compose up -d, ap√≥s isto, vamos executar o seguinte comando em nosso terminal:

docker-compose exec laravel php artisan migrate
Sim, a migrate √© rodada dentro do nosso container e n√£o dentro da nossa aplica√ß√£o geral. Este processo serve tamb√©m para as Seed:

docker-compose exec laravel php artisan db:seed
Rodando a aplica√ß√£o
Para rodarmos a aplica√ß√£o iremos seguir os seguintes passos:

Rodar os container: docker-compose up -d
Executar o container laravel: docker-compose exec laravel bash
Dentro do container, executar o comando: php artisan serve --host=0.0.0.0
Ap√≥s isto, podemos acessar em nosso navegador a url: http://localhost:8000
